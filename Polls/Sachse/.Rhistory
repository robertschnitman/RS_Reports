aes(x = votes_early, y = votes_election_day, label = last_name) +
geom_text(col = 'cyan4', position = position_jitter()) +
theme_light2()
data$last_name <- data$candidate %>%
gsub(' Jr\\.', '', .) %>%
str_split(' ') %>%
map_chr(~ .x[length(.x)])
ggplot(data) +
aes(x = votes_early, y = votes_election_day, label = last_name) +
geom_text(col = 'cyan4', position = position_jitter()) +
labs(y = 'Votes on Election Day',
x = 'Votes During the Early Voting Period',
title = 'Early and Election Day Voting Behavior')
theme_light2()
data$last_name <- data$candidate %>%
gsub(' Jr\\.', '', .) %>%
str_split(' ') %>%
map_chr(~ .x[length(.x)])
ggplot(data) +
aes(x = votes_early, y = votes_election_day, label = last_name) +
geom_text(col = 'cyan4', position = position_jitter()) +
labs(y = 'Votes on Election Day',
x = 'Votes During the Early Voting Period',
title = 'Figure 2: Early and Election Day Voting Behavior')  +
theme_light2()
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = votes_total_pct) +
geom_bar(stat = 'identity') +
geom_text() +
scale_fill_brewer(palette = 'Blues') +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light2()
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text() +
scale_fill_brewer(palette = 'Blues') +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light2()
?geom_text
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(col = 'pink') +
scale_fill_brewer(palette = 'Blues') +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light2()
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(col = 'red') +
scale_fill_brewer(palette = 'Blues') +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light2()
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(col = 'purple') +
scale_fill_brewer(palette = 'Blues') +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light2()
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(col = 'purple') +
scale_fill_brewer(palette = 'Blues') +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank())
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(col = 'purple') +
scale_fill_brewer(palette = 'Blues') +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 1) +
scale_fill_brewer(palette = 'Blues') +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 2) +
scale_fill_brewer(palette = 'Blues') +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 2) +
scale_fill_brewer(palette = 'Blues') +
xlim(0, 400) +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
?xlim
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 2) +
scale_fill_brewer(palette = 'Blues') +
ylim(0, 400) +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 50) +
scale_fill_brewer(palette = 'Blues') +
ylim(0, 350) +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 25) +
scale_fill_brewer(palette = 'Blues') +
ylim(0, 350) +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total,'; ', votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 25) +
scale_fill_brewer(palette = 'Blues') +
ylim(0, 350) +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total,'; ', votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 40) +
scale_fill_brewer(palette = 'Blues') +
ylim(0, 350) +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total,'; ', votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 35) +
scale_fill_brewer(palette = 'Blues') +
ylim(0, 350) +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
# 1. Load libraries
# Libraries to use
libs <- c('tidyverse', 'magrittr', 'broom')
# For each library...
for (i in libs) {
# If it's not already installed...
if (!require(i, character.only = TRUE)) {
# Install it...
install.packages(i)
# Then load it.
library(i, character.only = TRUE)
}
}
# 2. Import data
df <- read.delim('survey.tsv')
# 3. Build logistic model to estimate each individual's probability of
## voting for candidate A using all the features in the data set.
m <- glm(vote ~ ., df, family = binomial(link = 'logit'))
### The "." tells R to use every variable.
### The "family" tells R which probability distribution function to use.
#### We want "logit" for a logistic regression
# 4. List the fitted coefficients for each age group and gender.
m %>%
tidy()
setwd("C:/Users/crispychicken/Box Sync/RGS Consulting/Clients/Wyzant/Students/Active/Clo B/R/2020-02-20")
# 2. Import data
df <- read.delim('survey.tsv')
# 3. Build logistic model to estimate each individual's probability of
## voting for candidate A using all the features in the data set.
m <- glm(vote ~ ., df, family = binomial(link = 'logit'))
# 4. List the fitted coefficients for each age group and gender.
m %>%
tidy()
m
# 4. List the fitted coefficients for each age group and gender.
m %>%
tidy() %>%
filter(grepl('age', 'sex'))
# 4. List the fitted coefficients for each age group and gender.
m %>%
tidy() %>%
filter(grepl(c('age', 'sex'), Term))
# 4. List the fitted coefficients for each age group and gender.
m %>%
tidy() %>%
filter(grepl(c('age', 'sex'), Term))
m %>%
tidy()
# 4. List the fitted coefficients for each age group and gender.
m %>%
tidy() %>%
filter(grepl(c('age', 'sex'), term))
# 4. List the fitted coefficients for each age group and gender.
m %>%                            # With this model...
tidy() %>%                     # Get "tidy" (i.e. data-frame friendly) results
filter(grepl('age|sex', term)) # Filter for ONLY age and sex variables
setwd("~/MEGA/Personal/Scripts/R/Reports/Polls/Sachse")
data <- read_csv('sachse2020.csv')
data %>%
arrange(total_pct) %>%
set_names(c('Early Voting', 'Election Day', 'Total Votes', 'Total Votes %')) %>%
kable(booktabs = TRUE, caption = 'Data Preview', linesep = '') %>%
kable_styling(latex_options = "hold_position") %>%
footnote(general = 'https://www.cityofsachse.com/365/Election-Results',
footnote_as_chunk = TRUE)
data <- read_csv('sachse2020.csv')
data %>%
arrange(votes_total_pct) %>%
set_names(c('Early Voting', 'Election Day', 'Total Votes', 'Total Votes %')) %>%
kable(booktabs = TRUE, caption = 'Data Preview', linesep = '') %>%
kable_styling(latex_options = "hold_position") %>%
footnote(general = 'https://www.cityofsachse.com/365/Election-Results',
footnote_as_chunk = TRUE)
data <- read_csv('sachse2020.csv')
data %>%
arrange(votes_total_pct) %>%
set_names(c('Candidate', 'Early Voting', 'Election Day',
'Total Votes', 'Total Votes %')) %>%
kable(booktabs = TRUE, caption = 'Data Preview', linesep = '') %>%
kable_styling(latex_options = "hold_position") %>%
footnote(general = 'https://www.cityofsachse.com/365/Election-Results',
footnote_as_chunk = TRUE)
data <- read_csv('sachse2020.csv')
data %>%
set_names(c('Candidate', 'Early Voting', 'Election Day',
'Total Votes', 'Total Votes %')) %>%
arrange(desc(votes_total_pct)) %>%
kable(booktabs = TRUE, caption = 'Data Preview', linesep = '') %>%
kable_styling(latex_options = "hold_position") %>%
footnote(general = 'https://www.cityofsachse.com/365/Election-Results',
footnote_as_chunk = TRUE)
data <- read_csv('sachse2020.csv')
data %>%
arrange(desc(votes_total_pct)) %>%
set_names(c('Candidate', 'Early Voting', 'Election Day',
'Total Votes', 'Total Votes %')) %>%
kable(booktabs = TRUE, caption = 'Data Preview', linesep = '') %>%
kable_styling(latex_options = "hold_position") %>%
footnote(general = 'https://www.cityofsachse.com/365/Election-Results',
footnote_as_chunk = TRUE)
data <- read_csv('sachse2020.csv')
data %>%
arrange(desc(votes_total_pct)) %>%
set_names(c('Candidate', 'Early Voting', 'Election Day',
'Total Votes', 'Total Votes %')) %>%
kable(booktabs = TRUE, caption = 'Special Election Results (Pre-runoff)', linesep = '') %>%
kable_styling(latex_options = "hold_position") %>%
footnote(general = 'https://www.cityofsachse.com/365/Election-Results',
footnote_as_chunk = TRUE)
# Libraries to use.
libs <- c('tidyverse', 'magrittr', 'knitr', 'kableExtra')
# For each library...
for (i in libs) {
# If it's not already installed...
if (!require(i, character.only = TRUE)) {
# Install it...
install.packages(i)
# Then load it.
library(i, character.only = TRUE)
}
}
data <- read_csv('sachse2020.csv')
data %>%
arrange(desc(votes_total_pct)) %>%
set_names(c('Candidate', 'Early Voting', 'Election Day',
'Total Votes', 'Total Votes %')) %>%
kable(booktabs = TRUE, caption = 'Special Election Results (Pre-runoff)', linesep = '') %>%
kable_styling(latex_options = "hold_position") %>%
footnote(general = 'https://www.cityofsachse.com/365/Election-Results',
footnote_as_chunk = TRUE)
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total,'; ', votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 35) +
scale_fill_brewer(palette = 'Blues') +
ylim(0, 350) +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
theme_light2 <- function() {
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = 'none')
}
data$last_name <- data$candidate %>%
gsub(' Jr\\.', '', .) %>%
str_split(' ') %>%
map_chr(~ .x[length(.x)])
ggplot(data) +
aes(x = votes_early, y = votes_election_day, label = last_name) +
geom_text(col = 'cyan4', position = position_jitter()) +
labs(y = 'Votes on Election Day',
x = 'Votes During the Early Voting Period',
title = 'Figure 3: Early and Election Day Voting Behavior')  +
theme_light2()
# Libraries to use.
libs <- c('tidyverse', 'magrittr', 'knitr', 'kableExtra')
# For each library...
for (i in libs) {
# If it's not already installed...
if (!require(i, character.only = TRUE)) {
# Install it...
install.packages(i)
# Then load it.
library(i, character.only = TRUE)
}
}
data <- read_csv('sachse2020.csv')
data %>%
arrange(desc(votes_total_pct)) %>%
set_names(c('Candidate', 'Early Voting', 'Election Day',
'Total Votes', 'Total Votes %')) %>%
kable(booktabs = TRUE, caption = 'Special Election Results (Pre-runoff)', linesep = '') %>%
kable_styling(latex_options = "hold_position") %>%
footnote(general_title = 'Source:',
general = 'https://www.cityofsachse.com/365/Election-Results',
footnote_as_chunk = TRUE)
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total,'; ', votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 38) +
scale_fill_brewer(palette = 'Blues') +
ylim(0, 350) +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total,'; ', votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 37) +
scale_fill_brewer(palette = 'Blues') +
ylim(0, 350) +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
ggplot(data) +
aes(x = reorder(candidate, votes_total),
y = votes_total,
fill = reorder(candidate, votes_total),
label = paste0(votes_total,'; ', votes_total_pct, '%')) +
geom_bar(stat = 'identity') +
geom_text(nudge_y = 36) +
scale_fill_brewer(palette = 'Blues') +
ylim(0, 350) +
coord_flip() +
labs(x = '',
y = 'Total Votes',
title = 'Figure 2: Total Votes by Candidate') +
theme_light() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none')
data
